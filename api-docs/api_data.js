define({ "api": [  {    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "optional": false,            "field": "varname1",            "description": "<p>No type.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "varname2",            "description": "<p>With type.</p>"          }        ]      }    },    "type": "",    "url": "",    "version": "0.0.0",    "filename": "./docs/main.js",    "group": "_Users_svarma_projects_cis_sensei_server_docs_main_js",    "groupTitle": "_Users_svarma_projects_cis_sensei_server_docs_main_js",    "name": ""  },  {    "type": "get",    "url": "https://image-stage.adobe.io/lrService/status/<:jobId>",    "title": "check status",    "version": "1.0.0",    "description": "<p>Returns the status of a job.</p>",    "name": "auto_tone_job_get",    "group": "autoTone",    "parameter": {      "fields": {        "URL Param": [          {            "group": "URL Param",            "type": "string",            "optional": false,            "field": "jobId",            "description": "<p>The jobId to get status for.</p>"          }        ]      },      "examples": [        {          "title": "HTTP Usage Template:",          "content": "GET /status/<:jobId>  HTTP/1.1\nHost: image-stage.adobe.io/lrService\nContent-Type: application/json\nauthorization: Bearer $token\nx-api-key: $x-api-key\nx-gw-ims-org-id: $x-gw-ims-org-id",          "type": "http"        },        {          "title": "Curl Usage:",          "content": "curl -H \"authorization: Bearer $token\" -H \"content-type:application/json\" -H \"x-api-key:$x-api-key\" -X GET https://image-stage.adobe.io/lrService/status/<:jobId>",          "type": "curl"        }      ]    },    "success": {      "examples": [        {          "title": "Pending Job Example:",          "content": "HTTP/1.1 202\nContent-Type: application/json\n{\n  \"jobId\":\"f54e0fcb-260b-47c3-b520-de0d17dc2b67\",\n  \"created\":\"2018-01-04T12:57:15.12345:Z\",\n  \"modified\":\"2018-01-04T12:58:36.12345:Z\",\n  \"outputs\":[\n    {\n      \"input\":\"/some_project/photo.jpg\",\n      \"status\":\"pending\"\n    }\n  ]\n  \"_links\":{\n    \"self\":{\n      \"href\":\"https://image-stage.adobe.io/lrService/status/f54e0fcb-260b-47c3-b520-de0d17dc2b67\"\n    }\n  }\n}",          "type": "json"        },        {          "title": "Succeeded Job Example:",          "content": "HTTP/1.1 202\nContent-Type: application/json\n{\n  \"jobId\":\"f54e0fcb-260b-47c3-b520-de0d17dc2b67\",\n  \"created\":\"2018-01-04T12:57:15.12345:Z\",\n  \"modified\":\"2018-01-04T12:58:36.12345:Z\",\n  \"outputs\":[\n    {\n      \"input\":\"/some_project/photo.jpg\",\n      \"status\":\"succeeded\",\n      \"_links\":{\n        \"self\":\n          {\n            \"href\":\"/some_project/OUTPUT/photo.jpg\",\n            \"storage\":\"adobe\"\n          }\n      },\n      \"details\": {\n        \"Exposure2012\": 15,\n        \"Contrast2012\": -22,\n        \"Highlights2012\": -86,\n        \"Shadows2012\": 60,\n        \"Whites2012\": 27,\n        \"Blacks2012\": -20,\n        \"Clarity2012\": 0,\n        \"Vibrance\": 12,\n        \"Saturation\": 3\n      }\n    }\n  ],\n  \"_links\":{\n    \"self\":{\n      \"href\":\"https://image-stage.adobe.io/lrService/status/f54e0fcb-260b-47c3-b520-de0d17dc2b67\"\n    }\n  }\n}",          "type": "json"        },        {          "title": "Failed Job Example:",          "content": "HTTP/1.1 202\nContent-Type: application/json\n{\n  \"jobId\":\"f54e0fcb-260b-47c3-b520-de0d17dc2b67\",\n  \"created\":\"2018-01-04T12:57:15.12345:Z\",\n  \"modified\":\"2018-01-04T12:58:36.12345:Z\",\n  \"outputs\":[\n    {\n      \"input\":\"/some_project/photo.jpg\",\n      \"status\":\"failed\",\n      \"error\" {\n        \"type\": \"InputValidationError\",\n        \"title\": \"request parameters didn't validate\"\n      }\n    }\n  ],\n  \"_links\":{\n    \"self\":{\n      \"href\":\"https://image-stage.adobe.io/lrService/status/f54e0fcb-260b-47c3-b520-de0d17dc2b67\"\n    }\n  }\n}",          "type": "json"        },        {          "title": "Success-Response Templated:",          "content": "HTTP/1.1 202\nContent-Type: application/json\n{\n    \"jobId\":\"<:jobId>\",\n    \"created\":\"<YYYY-DD-MMThh:mm:ss.mmmmm:Z>\",\n    \"modified\":\"<YYYY-DD-MMThh:mm:ss.mmmmm:Z>\",\n    \"outputs\":[\n       {\n         \"input\":\"<input>\",\n         \"status\":\"<status>\",\n         \"_links\":{\n           \"self\":{\n             \"href\":\"<href>\",\n             \"storage\":\"<storage>\"\n           }\n         },\n         \"details\":{\n           \"<details>\"\n         }\n       }\n    ],\n    \"_links\":{\n       \"self\":{\n         \"href\":\"<:hostEndpoint>/status/<:jobId>\"\n       }\n    }\n}",          "type": "json"        }      ],      "fields": {        "Success 202": [          {            "group": "Success 202",            "type": "string",            "optional": false,            "field": "jobId",            "description": "<p>the job's id requested</p>"          },          {            "group": "Success 202",            "type": "string",            "optional": false,            "field": "created",            "description": "<p>timestamp</p>"          },          {            "group": "Success 202",            "type": "string",            "optional": false,            "field": "modified",            "description": "<p>timestamp</p>"          },          {            "group": "Success 202",            "type": "array",            "optional": false,            "field": "outputs",            "description": "<p>array of outputs</p>"          },          {            "group": "Success 202",            "type": "string",            "optional": false,            "field": "outputs.input",            "description": "<p>the original input file path</p>"          },          {            "group": "Success 202",            "type": "string",            "optional": false,            "field": "outputs.status",            "description": "<p>the child job status</p>  <ul>    <li>pending - request has been accepted and is waiting to start</li>    <li>running - the child job is running</li>    <li>uploading - files have been generated and are uploading to destination</li>    <li>succeeded - the child job has succeeded</li>    <li>failed - the child job has failed</li>  </ul>"          },          {            "group": "Success 202",            "type": "hash",            "optional": false,            "field": "_links",            "description": "<p>include hrefs that client can use to track status</p>"          },          {            "group": "Success 202",            "type": "hash",            "optional": false,            "field": "_links.self",            "description": "<p>the relation type</p>"          },          {            "group": "Success 202",            "type": "string",            "optional": false,            "field": "_links.self.href",            "description": "<p>the link to track status</p>"          },          {            "group": "Success 202",            "type": "hash",            "optional": false,            "field": "outputs._links",            "description": "<p>include hrefs of the output location</p>"          },          {            "group": "Success 202",            "type": "hash",            "optional": false,            "field": "outputs._links.self",            "description": "<p>the relation type</p>"          },          {            "group": "Success 202",            "type": "string",            "optional": false,            "field": "outputs._links.self.href",            "description": "<p>the output location</p>"          },          {            "group": "Success 202",            "type": "string",            "allowedValues": [              "\"external\"",              "\"adobe\""            ],            "optional": false,            "field": "outputs._links.self.storage",            "description": "<p>the storage of output</p>"          },          {            "group": "Success 202",            "type": "hash",            "optional": false,            "field": "outputs.details",            "description": "<p>include specific auto tone related parameters</p>"          },          {            "group": "Success 202",            "type": "json",            "optional": false,            "field": "outputs.errors",            "description": "<p>any errors reported requested output</p>"          },          {            "group": "Success 202",            "type": "string",            "optional": false,            "field": "outputs.errors.type",            "description": "<p>a machine readable error code</p>"          },          {            "group": "Success 202",            "type": "string",            "optional": false,            "field": "outputs.errors.title",            "description": "<p>a short human readable error summary</p>"          },          {            "group": "Success 202",            "type": "array",            "optional": true,            "field": "outputs.errors.errorDetails",            "description": "<p>further descriptions of the exact errors where <code>errorDetail</code> is substituted for a specific issue</p>"          }        ]      }    },    "filename": "./app.js",    "groupTitle": "autoTone",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "string",            "optional": false,            "field": "authorization",            "description": "<p>Authorization value.</p>"          },          {            "group": "Header",            "type": "string",            "optional": false,            "field": "Content-Type",            "description": "<p>application/json</p>"          },          {            "group": "Header",            "type": "string",            "optional": false,            "field": "x-api-key",            "description": "<p>a client id</p>"          },          {            "group": "Header",            "type": "string",            "optional": false,            "field": "x-gw-ims-org-id",            "description": "<p>the user org id</p>"          }        ]      }    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "string",            "optional": false,            "field": "type",            "description": "<p>a machine-readable error code</p>"          },          {            "group": "Error 4xx",            "type": "string",            "optional": false,            "field": "title",            "description": "<p>short, human-readable summary of the problem</p>"          },          {            "group": "Error 4xx",            "type": "array",            "optional": true,            "field": "errorDetails",            "description": "<p>further descriptions of the exact errors where <code>errorDetail</code> is substituted for a specific issue</p>"          }        ]      },      "examples": [        {          "title": "Error-Response Templeted:",          "content": "HTTP/1.1 <Status_Code> <Reason>\nContent-Type: application/json\n{\n  \"type\": \"<errorCode>\",\n  \"title\": \"<errorDescription>\",\n  \"<errorDetails>\": [\n    {\n      \"name\":\"<paramName>\",\n      \"reason\":\"<error>\"\n    }\n  ]\n}",          "type": "json"        },        {          "title": "Example FileExistsError:",          "content": "HTTP/1.1 400 Bad Request\nContent-Type: application/json\n{\n  \"type\": \"FileExistsError\",\n  \"title\": \"File does not exist\"\n}",          "type": "json"        },        {          "title": "Example InputValidationError:",          "content": "HTTP/1.1 400 Bad Request\nContent-Type: application/json\n{\n  \"type\": \"InputValidationError\",\n  \"title\": \"request parameters didn't validate\",\n  \"invalidParams\": [\n    {\n      \"name\":\"storage\",\n      \"reason\":\"value must be either 'adobe' or 'external'\"\n    }\n  ]\n}",          "type": "json"        },        {          "title": "Example AuthorizationError:",          "content": "HTTP/1.1 401 Unauthorized\nContent-Type: application/json\n{\n  \"type\": \"AuthorizationError\",\n  \"title\": \"Invalid API key or missing auth token\"\n}",          "type": "json"        },        {          "title": "Example MissingAuthTokenError:",          "content": "HTTP/1.1 401 Unauthorized\nContent-Type: application/json\n{\n  \"type\": \"MissingAuthTokenError\",\n  \"title\": \"Auth token is missing\"\n}",          "type": "json"        },        {          "title": "Example InvalidAuthTokenError:",          "content": "HTTP/1.1 401 Unauthorized\nContent-Type: application/json\n{\n  \"type\": \"InvalidAuthTokenError\",\n  \"title\": \"Auth token is invalid\"\n}",          "type": "json"        },        {          "title": "Example ResourceNotFoundError:",          "content": "HTTP/1.1 404 Not Found\nContent-Type: application/json\n{\n  \"type\": \"ResourceNotFoundError\",\n  \"title\": \"Requested resource was not found\"\n}",          "type": "json"        },        {          "title": "Example InvalidContentTypeError:",          "content": "HTTP/1.1 415 Unsupported Media Type\nContent-Type: application/json\n{\n  \"type\": \"InvalidContentTypeError\",\n  \"title\": \"Invalid content type\"\n}",          "type": "json"        },        {          "title": "Example UndefinedError:",          "content": "HTTP/1.1 500 Internal Server Error\nContent-Type: application/json\n{\n  \"type\": \"UndefinedError\",\n  \"title\": \"Undefined Error\"\n}",          "type": "json"        }      ]    }  },  {    "type": "post",    "url": "https://image-stage.adobe.io/lrService/autoTone",    "title": "post job",    "version": "1.0.0",    "description": "<p>Initiates an asynchronous job to auto tone an image</p>",    "name": "auto_tone_post",    "group": "autoTone",    "parameter": {      "examples": [        {          "title": "HTTP Usage Templated:",          "content": "POST /autoTone HTTP/1.1\nHost: image-stage.adobe.io/lrService\nContent-Type: application/json\nauthorization: Bearer $token\nx-api-key: $x-api-key\nx-gw-ims-org-id: $x-gw-ims-org-id\n{\n  \"inputs\":{\n    \"href\": \"<presigned_getURL> or <cc_storage_location>\",\n    \"storage\": \"<storage>\",\n    \"headers\": {\n      \"Authorization\": \"Bearer<token>\",\n      \"X-Api-Key\": \"\"\n    }\n  },\n  \"outputs\": [\n    {\n      \"href\": \"<presigned_getURL> or <cc_storage_location\",\n      \"storage\": \"<storage>\",\n      \"type\": \"<type>\",\n      \"overwrite\":<overwrite>,\n      \"headers\": {\n        \"Authorization\": \"Bearer<token>\",\n        \"X-Api-Key\": \"\"\n      }\n    }\n  ]\n}",          "type": "http"        },        {          "title": "HTTP Example(CC Asset):",          "content": "POST /autoTone HTTP/1.1\nHost: image-stage.adobe.io/lrService\nContent-Type: application/json\nauthorization: Bearer $token\nx-api-key: $x-api-key\nx-gw-ims-org-id: $x-gw-ims-org-id\n{\n  \"inputs\":{\n    \"href\": \"/files/input.jpg\",\n    \"storage\": \"adobe\",\n    \"headers\": {\n      \"Authorization\": \"Bearer {{token}}\",\n      \"X-Api-Key\": \"<api-key>\"\n    }\n  },\n  \"outputs\": [\n    {\n      \"href\": \"/files/output.jpg\",\n      \"storage\": \"adobe\",\n      \"type\": \"image/jpeg\",\n      \"overwrite\": true,\n      \"headers\": {\n        \"Authorization\": \"Bearer {{token}}\",\n        \"X-Api-Key\": \"<api-key>\"\n      }\n    }\n  ]\n}",          "type": "http"        },        {          "title": "HTTP Example(External Asset):",          "content": "POST /autoTone HTTP/1.1\nHost: image-stage.adobe.io/lrService\nContent-Type: application/json\nauthorization: Bearer $token\nx-api-key: $x-api-key\nx-gw-ims-org-id: $x-gw-ims-org-id\n{\n  \"inputs\":{\n    \"href\": \"https://some-bucket-us-east-1.amazonaws.com/s3_presigned_getObject...\",\n    \"storage\": \"external\"\n  },\n  \"outputs\": [\n    {\n      \"href\": \"https://some-bucket-us-east-1.amazonaws.com/s3_presigned_putObject..\",\n      \"storage\": \"external\",\n      \"type\": \"image/jpeg\",\n      \"overwrite\": true\n    }\n  ]\n}",          "type": "http"        },        {          "title": "Curl Usage:",          "content": "curl -H \"authorization: Bearer $token\" -H \"Content-Type:application/json\" -H \"x-api-key:$x-api-key\" -X POST -d '{\"inputs\":{\"href\":\"<href>\",\"storage\":\"<storage>\"},\"outputs\":[{\"href\":\"<href>\",\"storage\":\"<storage>\",\"type\":\"<type>\"}]}' https://image-stage.adobe.io/lrService/autoTone",          "type": "curl"        }      ],      "fields": {        "Request": [          {            "group": "Request",            "type": "hash",            "optional": false,            "field": "inputs",            "description": "<p>A hash describing an input image to edit. The input object will be either 'external' OR 'adobe'</p>"          },          {            "group": "Request",            "type": "string",            "optional": false,            "field": "inputs.href",            "description": "<p>Either a Creative Cloud assets path for storage=&quot;adobe&quot; OR a presignedGetURL</p>"          },          {            "group": "Request",            "type": "string",            "allowedValues": [              "\"adobe\"",              "\"external\""            ],            "optional": true,            "field": "inputs.storage",            "defaultValue": "adobe",            "description": "<p>is the asset stored on Adobe's cloud or an external service (like AWS S3)</p>"          },          {            "group": "Request",            "type": "hash",            "optional": true,            "field": "inputs.headers",            "description": "<p>An authentication header used to fetch input asset.</p>"          },          {            "group": "Request",            "type": "string",            "optional": true,            "field": "inputs.headers.Authorization",            "description": "<p>User token used to fetch private asset.</p>"          },          {            "group": "Request",            "type": "string",            "optional": true,            "field": "inputs.headers.X-Api-Key",            "description": "<p>API key used to access storage service.</p>"          },          {            "group": "Request",            "type": "array",            "optional": false,            "field": "outputs",            "description": "<p>array of output objects</p>"          },          {            "group": "Request",            "type": "string",            "optional": false,            "field": "outputs.href",            "description": "<p>Either a Creative Cloud assets path for storage=&quot;adobe&quot; OR a presignedPutURL</p>"          },          {            "group": "Request",            "type": "string",            "allowedValues": [              "\"adobe\"",              "\"external\""            ],            "optional": true,            "field": "outputs.storage",            "defaultValue": "adobe",            "description": "<p>see the input.storage key.</p>"          },          {            "group": "Request",            "type": "string",            "allowedValues": [              "\"image/jpeg\""            ],            "optional": true,            "field": "outputs.type",            "defaultValue": "image/jpeg",            "description": "<p>outputs.type desired image format.</p>"          },          {            "group": "Request",            "type": "boolean",            "allowedValues": [              "true",              "false"            ],            "optional": true,            "field": "outputs.overwrite",            "defaultValue": "true",            "description": "<p>outputs.overwrite=true if the output file already exists should it be overwritten. Will eventually support eTags</p>"          },          {            "group": "Request",            "type": "hash",            "optional": true,            "field": "outputs.headers",            "description": "<p>An authentication header used to upload output.</p>"          },          {            "group": "Request",            "type": "string",            "optional": true,            "field": "outputs.headers.Authorization",            "description": "<p>User token used to upload output.</p>"          },          {            "group": "Request",            "type": "string",            "optional": true,            "field": "outputs.headers.X-Api-Key",            "description": "<p>API key used to access storage service.</p>"          }        ]      }    },    "filename": "./app.js",    "groupTitle": "autoTone",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "string",            "optional": false,            "field": "authorization",            "description": "<p>Authorization value.</p>"          },          {            "group": "Header",            "type": "string",            "optional": false,            "field": "Content-Type",            "description": "<p>application/json</p>"          },          {            "group": "Header",            "type": "string",            "optional": false,            "field": "x-api-key",            "description": "<p>a client id</p>"          },          {            "group": "Header",            "type": "string",            "optional": false,            "field": "x-gw-ims-org-id",            "description": "<p>the user org id</p>"          }        ]      }    },    "success": {      "fields": {        "Success 202": [          {            "group": "Success 202",            "type": "json",            "optional": false,            "field": "_links",            "description": "<p>hrefs the client can use to get status of the asynchronous job</p>"          }        ]      },      "examples": [        {          "title": "Success-Response Templated:",          "content": "HTTP/1.1 202 ACCEPTED\nContent-Type: application/json\n{\n  \"_links\": {\n     \"self\" :{\n       \"href\" : \"<:hostEndpoint>/status/<:jobId>\"\n     }\n  }\n}",          "type": "json"        },        {          "title": "Success-Response Example:",          "content": "HTTP/1.1 202 ACCEPTED\nContent-Type: application/json\n{\n  \"_links\": {\n     \"self\" :{\n       \"href\" : \"<:hostEndpoint>/status/f54e0fcb-260b-47c3-b520-de0d17dc2b67\"\n     }\n  }\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "string",            "optional": false,            "field": "type",            "description": "<p>a machine-readable error code</p>"          },          {            "group": "Error 4xx",            "type": "string",            "optional": false,            "field": "title",            "description": "<p>short, human-readable summary of the problem</p>"          },          {            "group": "Error 4xx",            "type": "array",            "optional": true,            "field": "errorDetails",            "description": "<p>further descriptions of the exact errors where <code>errorDetail</code> is substituted for a specific issue</p>"          }        ]      },      "examples": [        {          "title": "Error-Response Templeted:",          "content": "HTTP/1.1 <Status_Code> <Reason>\nContent-Type: application/json\n{\n  \"type\": \"<errorCode>\",\n  \"title\": \"<errorDescription>\",\n  \"<errorDetails>\": [\n    {\n      \"name\":\"<paramName>\",\n      \"reason\":\"<error>\"\n    }\n  ]\n}",          "type": "json"        },        {          "title": "Example FileExistsError:",          "content": "HTTP/1.1 400 Bad Request\nContent-Type: application/json\n{\n  \"type\": \"FileExistsError\",\n  \"title\": \"File does not exist\"\n}",          "type": "json"        },        {          "title": "Example InputValidationError:",          "content": "HTTP/1.1 400 Bad Request\nContent-Type: application/json\n{\n  \"type\": \"InputValidationError\",\n  \"title\": \"request parameters didn't validate\",\n  \"invalidParams\": [\n    {\n      \"name\":\"storage\",\n      \"reason\":\"value must be either 'adobe' or 'external'\"\n    }\n  ]\n}",          "type": "json"        },        {          "title": "Example AuthorizationError:",          "content": "HTTP/1.1 401 Unauthorized\nContent-Type: application/json\n{\n  \"type\": \"AuthorizationError\",\n  \"title\": \"Invalid API key or missing auth token\"\n}",          "type": "json"        },        {          "title": "Example MissingAuthTokenError:",          "content": "HTTP/1.1 401 Unauthorized\nContent-Type: application/json\n{\n  \"type\": \"MissingAuthTokenError\",\n  \"title\": \"Auth token is missing\"\n}",          "type": "json"        },        {          "title": "Example InvalidAuthTokenError:",          "content": "HTTP/1.1 401 Unauthorized\nContent-Type: application/json\n{\n  \"type\": \"InvalidAuthTokenError\",\n  \"title\": \"Auth token is invalid\"\n}",          "type": "json"        },        {          "title": "Example ResourceNotFoundError:",          "content": "HTTP/1.1 404 Not Found\nContent-Type: application/json\n{\n  \"type\": \"ResourceNotFoundError\",\n  \"title\": \"Requested resource was not found\"\n}",          "type": "json"        },        {          "title": "Example InvalidContentTypeError:",          "content": "HTTP/1.1 415 Unsupported Media Type\nContent-Type: application/json\n{\n  \"type\": \"InvalidContentTypeError\",\n  \"title\": \"Invalid content type\"\n}",          "type": "json"        },        {          "title": "Example UndefinedError:",          "content": "HTTP/1.1 500 Internal Server Error\nContent-Type: application/json\n{\n  \"type\": \"UndefinedError\",\n  \"title\": \"Undefined Error\"\n}",          "type": "json"        }      ]    }  }] });
